<!doctype html>
<html ng-app="Demo" ng-controller="AppController" bn-window-teaser>
<head>
  <meta charset="utf-8"/>
  <title>
    Event Delegation Performance vs. Linking Performance In AngularJS
  </title>
  <link rel="stylesheet" type="text/css" href="./demo.css">
</head>
<body>
<h1>
  Event Delegation Performance vs. Linking Performance In AngularJS
</h1>

<h2>
  Linking Performance
</h2>
<!--
  In this approach, we're going to link a directive for each friend in the
  list, allowing each node to listen for its own mouse events.
-->
<ul class="friends">
  <li ng-repeat="friend in friends track by friend.id"
      bn-friend
      class="friend">
    {{ friend.name }}
  </li>
</ul>
<!-- Load scripts. -->
<script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
<script src="http://cdn.staticfile.org/angular.js/1.3.0/angular.min.js"></script>
<script type="text/javascript">
  // Create an application module for our demo.
  var app = angular.module("Demo", []);
  // -------------------------------------------------- //
  // -------------------------------------------------- //
  // I control the root of the application.
  app.controller(
      "AppController",
      function ($scope) {
        $scope.friends = [];
        // Build up a large collection of friends so we can see how performance
        // is affected at scale (basically the only time performance matters).
        for (var i = 1; i <= 1000; i++) {
          $scope.friends.push({
            id: i,
            name: ( "Friend " + i )
          });
        }
      }
  );
  // -------------------------------------------------- //
  // -------------------------------------------------- //
  // I provide a directive for each element in the list, handling the "mousenter"
  // event at the individual child level.
  app.directive(
      "bnFriend",
      function () {

        // Return the directive configuration.
        return ({
          link: link,
          restrict: "A"
        });
        // I bind the JavaScript events to the scope.
        function link($scope, element, attributes) {

          // Listen for the "mouseenter" event on the current node.
          element.on(
              "mouseenter",
              function handleMouseEnter(event) {
                console.log("Mousing", angular.element.trim(element.text()));
              }
          );
        }
      }
  );
</script>
</body>
</html>